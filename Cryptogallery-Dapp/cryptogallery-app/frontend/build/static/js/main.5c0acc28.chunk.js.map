{"version":3,"sources":["components/AppNavbar.js","components/Item.js","components/item_list.js","components/Home.js","components/AddArt.js","components/OwnArt.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","toggle","bind","assertThisInitialized","handleRegister","setState","window","ethereum","request","method","addressArray","currentAddress","console","log","web3","eth","getAccounts","address","contract","methods","register","send","from","then","result","alert","react_default","a","createElement","className","Navbar","bg","variant","NavbarBrand","tag","Link","to","style","margin","color","fontSize","fontFamily","index_es","icon","faPalette","faPaintBrush","Button","onClick","Component","Item","_ref","item","Card","width","height","Img","src","alt","title","Body","Title","Text","description","price","owner","sold","esm_Button","Itemlist","paintings","map","components_Item","key","id","Home","provider","handleBuy","airdrop","sampleCB","_this2","fetch","response","json","data","purchaseArt","parseInt","value","ethers","utils","parseEther","String","err","catch","e","toWei","amount","toString","fromAddress","tokenContract","transferFrom","toAddress","_this3","Container","fluid","onSubmit","event","preventDefault","htmlFor","type","placeholder","ref","input","required","components_item_list","AddArt","emptyItem","image","handleChange","handleSubmit","target","name","objectSpread","file","files","formData","FormData","append","body","res","newId","addArt","undefined","history","push","fontWeight","Form","FormGroup","Label","for","Input","onChange","autoComplete","rows","OwnArt","_useState","useState","_useState2","slicedToArray","painting","setPainting","useEffect","asyncToGenerator","regenerator_default","mark","_callee","currentOwner","wrap","_context","prev","next","sent","ownPaintings","filter","x","stop","App","getWeb3Connection","enable","Web3","net","getId","netId","CryptogalleryV2","networks","Contract","abi","ERC20CARAT","react_router_dom","AppNavbar_AppNavbar","react_router","path","exact","component","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"gtoHAMqBA,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAACC,QAAQ,GACtBR,EAAKS,OAAST,EAAKS,OAAOC,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACdA,EAAKY,eAAiBZ,EAAKY,eAAeF,KAApBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAJPA,wEAgBfG,KAAKU,SAAS,CACVL,QAASL,KAAKI,MAAMC,6LAMKM,OAAOC,SAASC,QAAQ,CACjDC,OAAQ,+BADJC,SAGAC,EAAiBD,EAAa,GACpCE,QAAQC,IAAIF,mDAEZC,QAAQC,IAAI,+FAIQP,OAAOQ,KAAKC,IAAIC,6BAAhCC,mBACeX,OAAOY,SAASC,QAAQC,WAAWC,KAAK,CAAEC,KAAML,EAAQ,KAC5EM,KAAK,SAAAC,GACFC,MAAM,wLAUV,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAClBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,SACvBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAaC,IAAKC,IAAMC,GAAI,IAAKC,MAAO,CAACC,OAAQ,QAASC,MAAO,UAAWC,SAAU,OAAQC,WAAW,YAAzG,kBACmBf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAiBC,KAAMC,MACtClB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAiBC,KAAME,OAEvBnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQP,MAAM,OAAOL,IAAKC,IAAMC,GAAI,WAAYC,MAAO,CAAEC,OAAQ,UAAjE,WACAZ,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQP,MAAM,OAAOL,IAAKC,IAAMC,GAAI,aAAcC,MAAO,CAAEC,OAAQ,UAAnE,UACAZ,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQP,MAAM,OAAOQ,QAASpD,KAAKS,eAAgBiC,MAAO,CAAEC,OAAQ,UAApE,sBAxDeU,wDCuCxBC,MArCf,SAAAC,GAA+B,IAAhBC,EAAgBD,EAAhBC,KAAMJ,EAAUG,EAAVH,QAYnB,OACErB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMf,MAAO,CAAEgB,MAAO,QAASC,OAAQ,UACrC5B,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,IAAN,CAAUvB,QAAQ,MAAMwB,IAAKL,EAAKK,IAAMC,IAAKN,EAAKO,QAClDhC,EAAAC,EAAAC,cAACwB,EAAA,EAAKO,KAAN,KACEjC,EAAAC,EAAAC,cAACwB,EAAA,EAAKQ,MAAN,KAAaT,EAAKO,OAClBhC,EAAAC,EAAAC,cAACwB,EAAA,EAAKS,KAAN,KACGV,EAAKW,aAERpC,EAAAC,EAAAC,cAACwB,EAAA,EAAKS,KAAN,KACGV,EAAKY,MAAQ,UAEhBrC,EAAAC,EAAAC,cAACwB,EAAA,EAAKS,KAAN,KACiB,IAAdV,EAAKa,MAAc,SAAgBb,EAAKa,MAAQ,IAtBxC,SAAZb,EAAKc,KACOvC,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAACE,MAAM,QAAlB,YAILb,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAQlC,QAAQ,UAAUe,QAASA,EAASlB,UAAU,uBAAtD,UCFCsC,MAVf,SAAAjB,GAAwC,IAArBkB,EAAqBlB,EAArBkB,UAAWrB,EAAUG,EAAVH,QAC5B,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEXuC,EAAUC,IAAI,SAAAlB,GAAI,OAAGzB,EAAAC,EAAAC,cAAC0C,EAAD,CAAMC,IAAKpB,EAAKqB,GAAIrB,KAAMA,EAAMJ,QAAS,kBAAKA,EAAQI,UC+HpEsB,cA3HX,SAAAA,EAAYlF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8E,IACfjF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgF,GAAA3E,KAAAH,KAAMJ,KACDQ,MAAQ,CAACqE,UAAW,IACzB5E,EAAK0B,SAAW,GAChB1B,EAAKkF,SAAW,GAChBlF,EAAKmF,UAAYnF,EAAKmF,UAAUzE,KAAfT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACjBA,EAAKoF,QAAUpF,EAAKoF,QAAQ1E,KAAbT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAKfA,EAAKqF,SAAWrF,EAAKqF,SAAS3E,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAXDA,mFAcC,IAAAsF,EAAAnF,KAChBoF,MAAM,uCACDxD,KAAK,SAAAyD,GAAQ,OAAIA,EAASC,SAC1B1D,KAAK,SAAA2D,GAAI,OAAIJ,EAAKzE,SAAS,CAAC+D,UAAWc,uCAGvCA,GACPvF,KAAKU,SAAS,CAAC+D,UAAWc,8EAaZ/B,kFAeR0B,EAAWlF,KAAKkF,kBACQvE,OAAOQ,KAAKC,IAAIC,4BAAxCL,kBAEYL,OAAOY,SAASC,QAAQgE,YAAYC,SAASjC,EAAKqB,IAA2B,IAArBY,SAASjC,EAAKY,QAAa1C,KAAK,CAACC,KAAMX,EAAe,GAAK0E,MAAOC,IAAOC,MAAMC,WAAWC,OAAOtC,EAAKY,SAC/K,SAAS2B,EAAKV,GACTU,GACFX,MAAM,uCAAuC5B,EAAKqB,GAAK,IAAK7D,EAAgB,CAACF,OAAQ,QACpFc,KAAK,SAAAyD,GAAQ,OAAIA,EAASC,SAC1B1D,KAAK,SAAA2D,GAEJL,EAASK,OAIdS,MAAM,SAASC,GACdhF,QAAQC,IAAI,qCAAuC+E,wRAS/BtF,OAAOQ,KAAKC,IAAIC,4BAAhCC,SACNL,QAAQC,IAAI,mBACEP,OAAOQ,KAAKyE,MAAMM,MAAMlG,KAAKmG,OAAOT,MAAMU,WAAY,SAC9DC,EAAc/E,EAAQ,YACtBX,OAAO2F,cAAc9E,QAAQ+E,aAAaF,EAAarG,KAAKwG,UAAUd,MAAoC,IAA5BD,SAASzF,KAAKmG,OAAOT,QAAahE,KAAK,CAAEC,KAAM0E,IAClIL,MAAM,SAAAD,GACLjE,MAAM,iDAAmDiE,wIAIpD,IAAAU,EAAAzG,KACEyE,EAAazE,KAAKI,MAAlBqE,UAEP,OACI1C,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAWC,OAAK,GAChB5E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAACI,WAAW,YAAvB,wBACAf,EAAAC,EAAAC,cAAA,WAASC,UAAU,iBACjBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc0E,SAAU,SAACC,GACvCA,EAAMC,iBACYL,EAAKD,UAAUd,MACnBC,IAAOC,MAAMC,WAAWC,OAAOW,EAAKN,OAAOT,UAG3D3D,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,YAAY7E,UAAU,WAArC,eACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAU8E,KAAK,OAAOC,YAAY,UAAWC,IAAK,SAACC,GAAYV,EAAKD,UAAYW,GAC/FC,SAAS,GAAGvC,GAAG,cAEjB9C,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAU6E,QAAQ,UAAnC,WACEhF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAU8E,KAAK,OAAOC,YAAY,SAC/CG,SAAS,GAAGF,IAAK,SAACC,GAAYV,EAAKN,OAASgB,GAAStC,GAAG,WAE9D9C,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQP,MAAM,OAAOQ,QAASpD,KAAKiF,QAASvC,MAAO,CAAEC,OAAQ,UAA7D,WAKJZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEbH,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAACI,WAAW,YAAvB,aACAf,EAAAC,EAAAC,cAACoF,EAAD,CAAUnF,UAAU,WAAWuC,UAAWA,EAAWrB,QAASpD,KAAKgF,sBApHlE3B,yDC4HJiE,sBArHX,SAAAA,EAAY1H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsH,IACfzH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwH,GAAAnH,KAAAH,KAAMJ,KARV2H,UAAY,CACRxD,MAAO,GACPI,YAAa,GACbC,MAAM,GACNoD,MAAO,MAKP3H,EAAKO,MAAQ,CACToD,KAAM3D,EAAK0H,WAEf1H,EAAK4H,aAAe5H,EAAK4H,aAAalH,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACpBA,EAAK6H,aAAe7H,EAAK6H,aAAanH,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANLA,4EAcNgH,GACT,IAAMc,EAASd,EAAMc,OACrB,GAAmB,UAAhBA,EAAOC,KAAiB,CACvB,IAAMlC,EAAQiC,EAAOjC,MACfkC,EAAOD,EAAOC,KAChBpE,EAAI1D,OAAA+H,EAAA,EAAA/H,CAAA,GAAOE,KAAKI,MAAMoD,MAC1BA,EAAKoE,GAAQlC,EACb1F,KAAKU,SAAS,CAAC8C,aAEf,CACA,IAAMsE,EAAQjB,EAAMc,OAAOI,MAAM,GACjC9G,QAAQC,IAAI2F,EAAMc,OAAOI,MAAM,IAC/B/H,KAAKI,MAAMoD,KAAX,MAA2BsE,EAC3B,IAAItE,EAAI1D,OAAA+H,EAAA,EAAA/H,CAAA,GAAOE,KAAKI,MAAMoD,MAC1BxD,KAAKU,SAAS,CAAC8C,uFAUJqD,sFAEfA,EAAMC,iBACAtD,iBAAWxD,KAAKI,MAAMoD,MACtBwE,EAAW,IAAIC,kBACQtH,OAAOQ,KAAKC,IAAIC,4BAAvCL,SACNgH,EAASE,OAAO,QAAS1E,EAAKO,OAC9BiE,EAASE,OAAO,cAAe1E,EAAKW,aACpC6D,EAASE,OAAO,QAAS1E,EAAKY,OAC9B4D,EAASE,OAAO,QAAS1E,EAAKgE,OAC9BQ,EAASE,OAAO,QAASlH,EAAe,IACxCC,QAAQC,IAAI8G,aACN5C,MAAM,+BAAgC,CACxCtE,OAAQ,OAERqH,KAAMH,IACPpG,KAAK,SAACwG,GAAD,OAASA,EAAI9C,SACpB1D,KAAK,SAAA2D,GACF8C,EAAQ9C,EAAKV,GACb/C,MAAM,oBAETkE,MAAM,SAACD,GAAD,OAASjE,MAAM,oBAAsBiE,8BAIvBpF,OAAOY,SAASC,QAAQ8G,OAAO7C,SAAS4C,GAAQ7E,EAAKW,YAAaX,EAAKY,OAAO1C,KAAK,CAAEC,KAAMX,EAAe,KAC9HgF,MAAM,SAASC,GACZhF,QAAQC,IAAI,iDAAmD+E,kBAEtDsC,WACTtH,QAAQC,IAAI,iDAGhBlB,KAAKJ,MAAM4I,QAAQC,KAAK,0IAGnB,IACEjF,EAAQxD,KAAKI,MAAboD,KACDO,EAAQhC,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAACgG,WAAW,SAAUlF,EAAKqB,GAAK,WAAa,WAEtE,OAAO9C,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,KACK3C,EACDhC,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAM/B,SAAU5G,KAAK0H,cACjB3F,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACI7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAOC,IAAI,SAAX,mBACA/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAO/B,KAAK,OAAOY,KAAK,QAAQ/C,GAAG,QAAQa,MAAOlC,EAAKO,OAAS,GACzDiF,SAAUhJ,KAAKyH,aAAcwB,aAAa,WAOrDlH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACI7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAOC,IAAI,SAAX,SACA/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAO/B,KAAK,QAAQY,KAAK,QAAQ/C,GAAG,QAAQa,MAAOlC,EAAKY,OAAS,GAC1D4E,SAAUhJ,KAAKyH,aAAcwB,aAAa,WAErDlH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACI7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAO/B,KAAK,WAAWkC,KAAK,IAAItB,KAAK,cAAc/C,GAAG,cAAca,MAAOlC,EAAKW,aAAe,GACxF6E,SAAUhJ,KAAKyH,aAAcwB,aAAa,iBAErDlH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACI7G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAO/B,KAAK,OAAQY,KAAK,QAClBoB,SAAUhJ,KAAKyH,aAAc/E,MAAO,CAACC,OAAQ,YAGxDZ,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACI7G,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQP,MAAM,UAAUoE,KAAK,SAAStE,MAAO,CAAEC,OAAQ,UAAvD,QACAZ,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQP,MAAM,YAAYL,IAAKC,IAAMC,GAAG,IAAIC,MAAO,CAAEC,OAAQ,UAA7D,qBAtHHU,gCC+BN8F,MAlCd,WAAkB,IAAAC,EAEYC,mBAAS,IAFrBC,EAAAxJ,OAAAyJ,EAAA,EAAAzJ,CAAAsJ,EAAA,GAEVI,EAFUF,EAAA,GAEDG,EAFCH,EAAA,GAyBjB,OArBAI,oBAAS5J,OAAA6J,EAAA,EAAA7J,CAAA8J,EAAA5H,EAAA6H,KAAE,SAAAC,IAAA,IAAA9I,EAAA+I,EAAA,OAAAH,EAAA5H,EAAAgI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAETlJ,QAAQC,IAAI,+BAFH+I,EAAAE,KAAA,EAIsBxJ,OAAOQ,KAAKC,IAAIC,cAJtC,OAIHL,EAJGiJ,EAAAG,KAKHL,EAAa/I,EAAe,GAElCoE,MAAM,uCACLxD,KAAK,SAAAyD,GAAQ,OAAIA,EAASC,SAC1B1D,KAAK,SAAA2D,GAAStE,QAAQC,IAAI,oBAEZD,QAAQC,IAAIqE,GACZ,IAAM8E,EAAa9E,EAAK+E,OAAO,SAAAC,GAAC,OAAEA,EAAElG,OAAO0F,IAC3CN,EAAYY,GACZpJ,QAAQC,IAAImJ,KAdlB,wBAAAJ,EAAAO,SAAAV,MAkBR,IAID/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEdsH,EAAS9E,IAAI,SAAAlB,GAAI,OAAGzB,EAAAC,EAAAC,cAAC0C,EAAD,CAAMC,IAAKpB,EAAKqB,GAAIrB,KAAMA,QC6BpCiH,uTAhDLzK,KAAK0K,0RAIR/J,OAAOC,0CACFD,OAAOC,SAAS+J,uBACtBhK,OAAOQ,KAAO,IAAIyJ,IAAKjK,OAAOC,UACxBO,EAAOR,OAAOQ,cAEAA,EAAKC,IAAIyJ,IAAIC,kBAA3BC,UACHC,EAAgBC,SAASF,oBACpBxJ,EAAWJ,EAAKC,IAAI8J,SACxBF,EAAgBG,IAChBH,EAAgBC,SAASF,GAAOzJ,SAElCX,OAAOY,SAAWA,EACZ+E,EAAgB,IAAInF,EAAKC,IAAI8J,SAASE,EAAWD,IAAKC,EAAWH,SAASF,GAAOzJ,SACvFX,OAAO2F,cAAgBA,mDAKrBvE,EAAAC,EAAAC,cAAA,sGAMFF,EAAAC,EAAAC,cAAA,iLAMJ,OACEF,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,KACEtJ,EAAAC,EAAAC,cAACqJ,EAAD,MACAvJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,KACExJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW5G,IACxC/C,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOC,KAAK,WAAWE,UAAWpE,IAClCvF,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOC,KAAK,aAAaE,UAAWvC,aA1C5B9F,aCAHsI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA7F,EAAA,GAAArE,KAAAkK,EAAAvL,KAAA,WAAqBqB,KAAK,SAAA2B,GAAiD,IAA9CwI,EAA8CxI,EAA9CwI,OAAQC,EAAsCzI,EAAtCyI,OAAQC,EAA8B1I,EAA9B0I,OAAQC,EAAsB3I,EAAtB2I,OAAQC,EAAc5I,EAAd4I,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,aCAdQ,IAASC,OACPtK,EAAAC,EAAAC,cAACF,EAAAC,EAAMsK,WAAP,KACEvK,EAAAC,EAAAC,cAACsK,EAAD,OAEFC,SAASC,eAAe,SAM1Bd","file":"static/js/main.5c0acc28.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand, Nav, Button} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport getConnection  from './connection.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faPalette,faPaintBrush } from '@fortawesome/free-solid-svg-icons';\r\nexport default class AppNavbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isOpen: false};\r\n        this.toggle = this.toggle.bind(this);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        // this.contract = {};\r\n        // this.provider = {};\r\n        // getConnection().then(({provider, contract}, err) => {\r\n        //     this.contract = contract;\r\n        //     this.provider = provider;\r\n        //     console.log(this.contract);\r\n        //     console.log(this.provider);\r\n        // });\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    async handleRegister() {\r\n        try {\r\n          const addressArray = await window.ethereum.request({\r\n            method: \"eth_requestAccounts\",\r\n          });\r\n          const currentAddress = addressArray[0];\r\n          console.log(currentAddress);\r\n        } catch (err) {\r\n          console.log(\"Exception occurred while trying to fetch current metamask address.\");\r\n        }\r\n        \r\n        // const cryptocontract = this.contract;\r\n        const address = await window.web3.eth.getAccounts();\r\n        const result = await window.contract.methods.register().send({ from: address[0] })\r\n        .then(result => {\r\n            alert('Registration Successful');\r\n        })\r\n        // const cryptocontract = window.contract;\r\n        // const register = await cryptocontract.register()\r\n        // .catch(function(e){\r\n        //   console.log(\"Exception while trying to register.\");\r\n        // });\r\n    } \r\n\r\n    render() {\r\n        return <div className='appnavbar'>\r\n            <Navbar bg=\"light\" variant=\"light\">\r\n                <NavbarBrand tag={Link} to={\"/\"} style={{margin: '.5rem', color: '#000000', fontSize: '40px', fontFamily:\"fantasy\"}}>\r\n                    Crypto Gallery <FontAwesomeIcon icon={faPalette} />\r\n                    <FontAwesomeIcon icon={faPaintBrush} />\r\n                    </NavbarBrand>\r\n                    <div className=\"float-left\">\r\n                        <Button color=\"dark\" tag={Link} to={'/art/new'} style={{ margin: '.5rem' }}>Add Art</Button>\r\n                        <Button color=\"dark\" tag={Link} to={'/art/myart'} style={{ margin: '.5rem' }}>My Art</Button>\r\n                        <Button color=\"dark\" onClick={this.handleRegister} style={{ margin: '.5rem' }}>Register</Button>\r\n                    </div>\r\n            </Navbar>\r\n        </div>;\r\n        \r\n    }\r\n}","\r\nimport React, {useState} from 'react'\r\nimport {Card, ListGroup, ListGroupItem} from 'react-bootstrap'\r\nimport Button from 'react-bootstrap/Button'\r\nimport '../css/item.css'\r\nimport getConnection  from './connection.js';\r\nimport { ethers, providers } from 'ethers';\r\n\r\nfunction Item({item, onClick}) {\r\n  function checkSold(){\r\n    if(item.sold===\"true\"){\r\n           return (<h3 style={{color:\"red\"}}>SOLD OUT</h3>);\r\n    }\r\n    else\r\n    {\r\n      return (<Button variant=\"primary\" onClick={onClick} className=\"buy btn btn-success\" >Buy</Button>); \r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <Card style={{ width: '18rem', height: '35rem' }}>\r\n      <Card.Img variant=\"top\" src={item.src}  alt={item.title}/>\r\n      <Card.Body>\r\n        <Card.Title>{item.title}</Card.Title>\r\n        <Card.Text>\r\n          {item.description}          \r\n        </Card.Text>\r\n        <Card.Text>\r\n          {item.price + ' ' + 'CARAT'}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          {item.owner != \"\" ? 'Owner' + ' ' + item.owner : \"\"}\r\n        </Card.Text>\r\n        {/* <Card.Text>\r\n          <Button variant=\"primary\" className=\"buy btn btn-success\" >Buy</Button>\r\n        </Card.Text> */}\r\n        {/* <Button variant=\"primary\" onClick={onClick} className=\"buy btn btn-success\" >Buy</Button> */}\r\n        {checkSold()}\r\n      </Card.Body>\r\n\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Item","import React from 'react'\r\nimport Item from './Item'\r\n\r\nfunction Itemlist({paintings, onClick}) {\r\n  return (\r\n    <div className=\"itemList\">\r\n      {  \r\n        paintings.map(item=>(<Item key={item.id} item={item} onClick={()=> onClick(item)}/>))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Itemlist   ","import React, { Component, useState,useEffect  } from 'react';\r\nimport '../css/App.css';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, ButtonGroup, FormGroup, Input, Label} from 'reactstrap';\r\nimport '../css/item_list.css';\r\nimport getConnection  from './connection.js';\r\nimport Itemlist from './item_list';\r\nimport { ethers, providers } from 'ethers';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {paintings: []};\r\n        this.contract = {};\r\n        this.provider = {};\r\n        this.handleBuy = this.handleBuy.bind(this);\r\n        this.airdrop = this.airdrop.bind(this);\r\n        // getConnection().then(({provider, contract}, err) => {\r\n        //     this.contract = contract;\r\n        //     this.provider = provider;\r\n        // });\r\n        this.sampleCB = this.sampleCB.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://cryptogallery.herokuapp.com\")\r\n            .then(response => response.json())\r\n            .then(data => this.setState({paintings: data}));\r\n    }\r\n\r\n    sampleCB(data) {\r\n      this.setState({paintings: data});\r\n    }\r\n    // let [paintings, setPaintings] = useState([]);\r\n    // useEffect(() => {   \r\n    //   fetch(\"http://localhost:4000\")\r\n    //   .then(response => response.json())\r\n    //   .then(data => \r\n    //        {\r\n    //         setPaintings(data);\r\n    //        });\r\n  \r\n    //   },[]);\r\n\r\n    async handleBuy(item){      \r\n      // try {\r\n      //   const addressArray = await window.ethereum.request({\r\n      //     method: \"eth_requestAccounts\",\r\n      //   });\r\n      //   window.addressArray = addressArray;\r\n      //   const currentAddress = addressArray[0];\r\n      //   console.log(currentAddress);\r\n      // } catch (err) {\r\n      //   console.log(\"Exception occurred while trying to fetch current metamask address.\");\r\n      // }\r\n      \r\n      //if response is ok then call the contract to make the transaction with the address and amount\r\n      // const cryptocontract = this.contract;\r\n      // const cryptocontract = window.contract;\r\n      const sampleCB = this.sampleCB;\r\n      const currentAddress =  await window.web3.eth.getAccounts();\r\n      // const buy = await cryptocontract.purchaseArt(parseInt(item.id), {value:String(ethers.utils.parseEther(String(item.price)))})\r\n      const buy = await window.contract.methods.purchaseArt(parseInt(item.id), (parseInt(item.price)*100)).send({from: currentAddress[0] , value: ethers.utils.parseEther(String(item.price))}\r\n      ,function(err, response){\r\n        if(!err){\r\n          fetch('https://cryptogallery.herokuapp.com/'+item.id + '/'+ currentAddress, {method: 'PUT'})\r\n          .then(response => response.json())\r\n          .then(data =>{\r\n            // this.setState({paintings: data});\r\n            sampleCB(data);\r\n          });\r\n        }\r\n      })\r\n      .catch(function(e){\r\n        console.log(\"Exception while trying to Buy Art.\" + e);\r\n      });\r\n      // if(buy !== undefined){\r\n      //     await buy.wait();\r\n          \r\n      // }\r\n    }\r\n\r\n    async airdrop(){\r\n      const address = await window.web3.eth.getAccounts();\r\n      console.log(\"AirDrop details\");\r\n      const price = window.web3.utils.toWei(this.amount.value.toString(), 'Ether');\r\n      const fromAddress = address[0];\r\n      await window.tokenContract.methods.transferFrom(fromAddress, this.toAddress.value, (parseInt(this.amount.value)*100)).send({ from: fromAddress})\r\n      .catch(err => {\r\n        alert(\"Exception occurred while transferring tokens. \" + err);\r\n      });\r\n    }\r\n\r\n    render() {\r\n        const {paintings} = this.state;\r\n\r\n        return (\r\n            <div>\r\n            \r\n              <Container fluid>\r\n              <div>\r\n                  <h3 style={{fontFamily:\"fantasy\"}}>Air Drop CARAT Token</h3>\r\n                  <section className=\"table-content\">\r\n                    <form className=\"form-inline\" onSubmit={(event) => {\r\n                      event.preventDefault()\r\n                      const toAddress = this.toAddress.value\r\n                      const price = ethers.utils.parseEther(String(this.amount.value));\r\n                      // this.props.transferFrom(this.props.account, toAddress, price)\r\n                    }}>\r\n                    <label htmlFor=\"toAddress\" className='airdrop'>To Address:</label>\r\n                    <input className='airdrop' type=\"text\" placeholder=\"address\"  ref={(input) => { this.toAddress = input }}\r\n                      required=\"\" id=\"toAddress\" />\r\n\r\n                    <label className='airdrop' htmlFor=\"amount\">Amount:</label>\r\n                      <input className='airdrop' type=\"text\" placeholder=\"Amount\" \r\n                          required=\"\" ref={(input) => { this.amount = input }} id=\"amount\"/>\r\n\r\n                    <Button color=\"dark\" onClick={this.airdrop} style={{ margin: '.5rem' }}>Send</Button>\r\n                  </form> \r\n                  </section>  \r\n                </div>\r\n              \r\n                <div className=\"Paintings\">\r\n                  {/*populate a item list of all the paintings using desc from reading a json */}\r\n                  <h3 style={{fontFamily:\"fantasy\"}}>Paintings</h3>\r\n                  <Itemlist className=\"itemList\" paintings={paintings} onClick={this.handleBuy}/>\r\n                </div>\r\n              </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component, useRef} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport axios from \"axios\";\r\nimport getConnection  from './connection.js';\r\nimport { ethers, providers } from 'ethers';\r\n\r\nclass AddArt extends Component {\r\n\r\n    emptyItem = {\r\n        title: '',\r\n        description: '',\r\n        price:'',\r\n        image: null\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: this.emptyItem\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        // getConnection().then(({provider, contract}, err) => {\r\n        //     this.contract = contract;\r\n        //     this.provider = provider;\r\n        // });\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        if(target.name !== \"image\"){\r\n            const value = target.value;\r\n            const name = target.name;\r\n            let item = {...this.state.item};\r\n            item[name] = value;\r\n            this.setState({item});            \r\n        }\r\n        else{\r\n            const file = (event.target.files[0]);\r\n            console.log(event.target.files[0]);\r\n            this.state.item[\"image\"] = file;\r\n            let item = {...this.state.item};\r\n            this.setState({item});\r\n        }\r\n        // const value = target.value;\r\n        // const name = target.name;\r\n        // let item = {...this.state.item};\r\n        // item[name] = name !== \"image\" ? value : target.files[0];\r\n        // this.setState({item}); \r\n        \r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        var newId;\r\n        event.preventDefault();\r\n        const item = {...this.state.item};\r\n        const formData = new FormData();\r\n        const currentAddress = await window.web3.eth.getAccounts();\r\n        formData.append(\"title\", item.title);\r\n        formData.append(\"description\", item.description);\r\n        formData.append(\"price\", item.price);\r\n        formData.append(\"image\", item.image);\r\n        formData.append(\"owner\", currentAddress[0]);\r\n        console.log(formData);\r\n        await fetch('http://localhost:4000/addart', {\r\n            method: 'POST',\r\n        \r\n            body: formData,\r\n        }).then((res) => res.json())\r\n        .then(data => {\r\n            newId = data.id;\r\n            alert(\"Upload success\");\r\n        })\r\n        .catch((err) => alert(\"File Upload Error\" + err));\r\n        // const cryptocontract = window.contract;\r\n        // const address = await window.web3.eth.getAccounts();\r\n        // const addArt = await cryptocontract.addArt(parseInt(newId), item.description, item.price, {value:String(ethers.utils.parseEther(String(0)))})\r\n        const addArt = await window.contract.methods.addArt(parseInt(newId), item.description, item.price).send({ from: currentAddress[0] })\r\n        .catch(function(e){\r\n            console.log(\"Exception while trying to Add Art to contract.\" + e);\r\n        });\r\n        if(addArt == undefined){\r\n            console.log(\"Add Art smart contract function not executed.\");\r\n        }\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {item} = this.state;\r\n        const title = <h2 style={{fontWeight:\"bold\"}}>{item.id ? 'Edit Art' : 'Add Art'}</h2>;\r\n\r\n        return <div>\r\n            <Container>\r\n                {title}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"title\">Name of the Art</Label>\r\n                        <Input type=\"text\" name=\"title\" id=\"title\" value={item.title || ''}\r\n                               onChange={this.handleChange} autoComplete=\"title\"/>                       \r\n                    </FormGroup>\r\n                    {/* <FormGroup>\r\n                        <Label for=\"artistName\">Name of the Artist</Label>\r\n                        <Input type=\"text\" name=\"artistName\" id=\"artistName\" value={item.artistName || ''}\r\n                               onChange={this.handleChange} autoComplete=\"artistName\"/>                       \r\n                    </FormGroup> */}\r\n                    <FormGroup>\r\n                        <Label for=\"price\">Price</Label>\r\n                        <Input type=\"price\" name=\"price\" id=\"price\" value={item.price || ''}\r\n                               onChange={this.handleChange} autoComplete=\"price\"/>                       \r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"textarea\" rows=\"2\" name=\"description\" id=\"description\" value={item.description || ''}\r\n                               onChange={this.handleChange} autoComplete=\"description\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input type=\"file\"  name=\"image\" /*ref={fileInput}*/\r\n                               onChange={this.handleChange} style={{margin: '.5rem'}}/>\r\n                        {/* <Button  className='upload-btn' color=\"dark\" style={{margin: '.5rem'}} onChange={() => fileInput.current.click()}>Choose File</Button> */}\r\n                    </FormGroup>                  \r\n                    <FormGroup>\r\n                        <Button color=\"success\" type=\"submit\" style={{ margin: '.5rem' }}>Save</Button>\r\n                        <Button color=\"secondary\" tag={Link} to=\"/\" style={{ margin: '.5rem' }}>Cancel</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default AddArt;","import React, { useState ,useEffect} from 'react'\r\nimport Item from './Item'\r\nimport CryptogalleryV2 from '../contracts/CryptogalleryV2.json';\r\nimport { ethers, Contract } from \"ethers\";\r\n\r\n function OwnArt() {\r\n\r\n  const [painting,setPainting]=useState([]);\r\n  \r\n  useEffect( async () => {\r\n    //get connection\r\n    console.log(\"inside use effect of OwnArt\");\r\n    //fetch paintings\r\n    const currentAddress =   await window.web3.eth.getAccounts();\r\n    const currentOwner=currentAddress[0];\r\n\r\n    fetch(\"https://cryptogallery.herokuapp.com\")\r\n    .then(response => response.json())\r\n    .then(data => {console.log(\"inside owned art\");\r\n                   \r\n                   console.log(data);\r\n                   const ownPaintings=data.filter(x=>x.owner==currentOwner);\r\n                   setPainting(ownPaintings);\r\n                   console.log(ownPaintings)});\r\n      \r\n        \r\n    \r\n  }, [])\r\n  \r\n  \r\n  return (\r\n    <div className=\"itemList\">\r\n      {\r\n     painting.map(item=>(<Item key={item.id} item={item} />))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OwnArt   ","import React, { Component} from 'react';\r\nimport './css/App.css';\r\nimport Web3 from 'web3';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport AddArt from './components/AddArt';\r\nimport AppNavbar from './components/AppNavbar';\r\nimport getConnection  from './components/connection.js';\r\nimport CryptogalleryV2 from './contracts/CryptogalleryV2.json';\r\nimport ERC20CARAT from './contracts/ERC20CARAT.json';\r\nimport OwnArt from './components/OwnArt';\r\n\r\nclass App extends Component{\r\n  async componentWillMount() {\r\n    await this.getWeb3Connection()\r\n  }\r\n  \r\n  async getWeb3Connection(){\r\n    if(window.ethereum){\r\n      await window.ethereum.enable();\r\n      window.web3 = new Web3(window.ethereum);\r\n      const web3 = window.web3;\r\n      // window.addressArray = await web3.eth.getAccounts();\r\n      const netId = await web3.eth.net.getId();\r\n      if(CryptogalleryV2.networks[netId]){\r\n        const contract = web3.eth.Contract(\r\n          CryptogalleryV2.abi,\r\n          CryptogalleryV2.networks[netId].address\r\n        );\r\n        window.contract = contract;\r\n        const tokenContract = new web3.eth.Contract(ERC20CARAT.abi, ERC20CARAT.networks[netId].address);\r\n        window.tokenContract = tokenContract;\r\n        // console.log(\"Initial Address: \" + window.addressArray[0]);\r\n      }\r\n      else{\r\n        return(\r\n          <h1>Contract not found in network.</h1>\r\n        );\r\n      }\r\n    }\r\n    else{\r\n      return(\r\n        <h1>Please Install Metamask to Interact</h1>\r\n      );\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Router>\r\n        <AppNavbar/>\r\n        <Switch>\r\n          <Route path='/' exact={true} component={Home}/>\r\n          <Route path='/art/new' component={AddArt}/>\r\n          <Route path='/art/myart' component={OwnArt}/>\r\n          {/* <Route path='/register' component={Home}/> */}\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}